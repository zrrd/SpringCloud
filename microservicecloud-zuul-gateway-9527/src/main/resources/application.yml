server:
  port: 9527
spring:
  application:
    name: zuul-gateway
# 服务网关也要注册为一个微服务
eureka:
  client:
    service-url:
      #defaultZone: http://localhost:7001/eureka/
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
  instance:
    #eureka显示ip
    prefer-ip-address: true
    #eureka status的显示的名字
    instance-id: gateway-9527.com

#项目监控配置  具体看印象笔记  自定义info config
management:
  endpoint:
    info:
      enabled: true
#自定义info信息
info:
  app:
    encoding: UTF-8
    java.source: 1.8
    java.traget: 1.8
    version: $project.version$

#如果下面的啥都配置的话  访问 provide-game 只能通过http://localhost:9527/provide-game/**
#而不能通过直接请求 http://localhost:8001/** 相当于接收全部的请求并且转发 并可以在这部添加权限校验
#增加了服务的安全性

#自定义服务映射规则
zuul:
  routes:
    #不对的 !!! 不需要eureka  手动路由
    #user-service:   #这里是路由id随意写
      #path: /test/**        #映射路径
      #utl: http://127.0.0.1:8001    #映射路径对应的url地址
    user-service:   #这里是路由id随意写
      path: /test/**        #映射路径
      serviceId: provide-game    #映射路径对应的url地址

    #也可以这样写  简化
    #服务名          映射地址  http://localhost:9527/test/game/1
    provide-game:  /test/**

    #默认的规则是
    #provide-game:  /provide-game/**


  #忽略原来真实名字    这样就访问不了了 http://localhost:9527/provide-game/game/1
  #ignored-services: "*"
  #统一前缀
  #prefix: /syj

  #错误重试  默认为false
  retryable: true
  # ignored-patterns: 希望忽略的路径
  # ignored-services: 希望忽略的服务

#熔断   在zuul中最好在后置拦截器里定义超时处理 返回一个页面  用户友好
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000 #将超时时间设置为5s 原本为 1s

#负载均衡重试
ribbon:
  ConnectTimeout: 250 #Ribbon的连续超时时间 单位是毫秒
  ReadTimeout: 1000 #Ribbon的数据读取超时时间
  OkToRetryOnAllOperations: true # 是否对所有请求都进行重试
  MaxAutoRetriesNextServer: 2   #重试切换实例次数 不要太大防止响应太慢
  MaxAutoRetries: 1     #对当前实例的重试次数



